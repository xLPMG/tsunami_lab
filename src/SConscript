##
# @author Alexander Breuer (alex.breuer AT uni-jena.de)
#
# @section DESCRIPTION
# Collects sources for a build.
##
Import('env')

# gather sources
l_sources = [ 'solvers/Roe.cpp',
             'solvers/Fwave.cpp',
              'patches/WavePropagation1d.cpp',
              'setups/DamBreak1d.cpp',
              'setups/RareRare1d.cpp',
              'setups/ShockShock1d.cpp',
              'setups/GeneralDiscontinuity1d.cpp',
              'setups/Subcritical1d.cpp',
              'setups/Supercritical1d.cpp',
              'setups/TsunamiEvent1d.cpp',
              'io/Csv.cpp' ]

for l_so in l_sources:
  env.sources.append( env.Object( l_so ) )

env.standalone = env.Object( "main.cpp" )

# gather unit tests
l_tests = [ 'tests.cpp',
            'solvers/Roe.test.cpp',
            'solvers/Fwave.test.cpp',
            'patches/WavePropagation1d.test.cpp',
            'io/Csv.test.cpp',
            'setups/DamBreak1d.test.cpp',
            'setups/RareRare1d.test.cpp',
            'setups/ShockShock1d.test.cpp',
            'setups/GeneralDiscontinuity1d.test.cpp',
            # 'setups/TsuanmiEvent1d.test.cpp'
            ]

for l_te in l_tests:
  env.tests.append( env.Object( l_te ) )

# gather sanity checks
l_sanitychecks = [ 'sanitychecks.cpp' ]

for l_sa in l_sanitychecks:
  env.sanitychecks.append( env.Object( l_sa ) )

Export('env')